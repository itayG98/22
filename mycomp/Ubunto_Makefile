# -*- MakeFile -*-

# Compiler

CC = gcc

# Executable name

TARGET = mycomp

# Source files

SRCS = mycomp.c complex.c 

# Object files

OBJS = $(SRCS:.c=.o)

# Compilation flags

CFLAGS = -Wall -Wextra -ansi -pedantic -lm

# Debug flags

DEBUG_FLAGS = -g

# Linker flags

LDFLAGS = -lm

# Default target

all: $(TARGET)

# Debug target

debug: CFLAGS += $(DEBUG_FLAGS)
debug: $(TARGET)

# Define dependencies for source files

mycomp.o: mycomp.c mycomp.h complex.h

complex.o: complex.c complex.h

# Linking the object files to create the executable

$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) -o $(TARGET) $(OBJS) $(LDFLAGS)

# Compiling individual source files into object files

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@
# Clean up build files

clean:
	rm -f $(OBJS) rm -f $(TARGET)
.PHONY: clean all